{"version":3,"file":"bundle.cjs.js","sources":["../src/index.js"],"sourcesContent":["import http from 'http';\n\nfunction lift() {\n  let { port, host } = this.config;\n  port = port || 1337;\n  // eslint-disable-next-line no-multi-assign\n  const server = (this.server = http.createServer(this.app.callback()));\n\n  server.listen(port, host);\n  server.on('error', onError);\n  server.on('listening', () => {\n    onListening();\n    this.emit('listening');\n  });\n\n  function onError(error) {\n    if (error.syscall !== 'listen') {\n      throw error;\n    }\n\n    let bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;\n\n    switch (error.code) {\n      case 'EACCES':\n        bind += ' requires elevated privileges';\n        logger.error(bind);\n        process.exit(1);\n        break;\n      case 'EADDRINUSE':\n        bind += ' is already in use';\n        logger.error(bind);\n        process.exit(1);\n        break;\n      default:\n        throw error;\n    }\n  }\n\n  function onListening() {\n    const addr = server.address();\n    let bind = '';\n    if (typeof addr === 'string') {\n      bind = `'pipe ${addr}`;\n    }\n    else {\n      if (addr.address === '::') {\n        bind += `${addr.family} `;\n        addr.address = '127.0.0.1';\n      }\n\n      bind += `http://${addr.address}:${addr.port}`;\n    }\n\n    logger.debug(`Listening on: ${bind}`);\n  }\n}\n\nexport default lift;\n"],"names":["lift","port","host","this","config","server","http","createServer","app","callback","listen","on","error","syscall","bind","code","exit","addr","address","family","debug","emit"],"mappings":"2IAEA,SAASA,WACHC,OAAAC,QAAiBC,KAAKC,SACnBH,GAAQ,WAETI,EAAUF,KAAKE,OAASC,KAAKC,aAAaJ,KAAKK,IAAIC,cAElDC,OAAOT,EAAMC,KACbS,GAAG,iBAMOC,MACO,WAAlBA,EAAMC,cACFD,MAGJE,EAAuB,iBAATb,UAA4BA,YAAiBA,WAEvDW,EAAMG,UACP,YACK,uCACDH,MAAME,WACLE,KAAK,aAEV,gBACK,4BACDJ,MAAME,WACLE,KAAK,uBAGPJ,OAxBLD,GAAG,YAAa,uBA6BfM,EAAOZ,EAAOa,cAChBJ,EAAO,GACS,iBAATG,aACOA,KAGK,OAAjBA,EAAKC,gBACID,EAAKE,YACXD,QAAU,0BAGCD,EAAKC,WAAWD,EAAKhB,eAGlCmB,uBAAuBN,aAzCzBO,KAAK"}